<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
		
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/js/**" location="/resources/js/"/>
	<resources mapping="/image/**" location="/resources/image/"/>
	<resources mapping="/css/**" location="/resources/css/"/>
	<resources mapping="/img/**" location="C:\\upload"/>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
 	<!-- 웹 소켓 -->
 	<websocket:handlers>
		<websocket:mapping handler="echoHandler" path="/echo" />
		<websocket:handshake-interceptors>
        	<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
        </websocket:handshake-interceptors>
		<websocket:sockjs />
	</websocket:handlers>
	
	<beans:bean id="echoHandler" class="edu.howf.controller.EchoHandler"></beans:bean>
	
	<!-- 자동 로그인 인터셉터 -->
	<beans:bean id="autoLoginInterceptor"
	 class="edu.howf.controller.AutoLoginInterceptor" />
	 
	<interceptors>
		<interceptor>
			<mapping path="/"/>
			<beans:ref bean="autoLoginInterceptor"/>
		</interceptor>
	</interceptors>
	
	<!-- 파일 업로드 경로 -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="C:/upload/" />
	</beans:bean>
	
	<!-- 결제 아임포트 API KEY -->
	<beans:bean id="iamportKey" class="java.lang.String">
		<beans:constructor-arg value="6762610013000254" />
	</beans:bean>
	
	<!-- 결제 아임포트 SECRET API KEY -->
	<beans:bean id="iamportSecretKey" class="java.lang.String">
		<beans:constructor-arg value="46VnDhH7paaluPlh5mW5dPktisxPccy2omZZvJHrjsod6KhkwbOuUTOIETzPx3FA5SkWqVM1ZHme5HlX" />
	</beans:bean>
	
	<!-- SMS API KEY -->
	<beans:bean id="smsKey" class="java.lang.String">
		<beans:constructor-arg value="NCST9YVUZ5B5V4JG" />
	</beans:bean>
	
	<!-- SMS SECRET API KEY -->
	<beans:bean id="smsSecretKey" class="java.lang.String">
		<beans:constructor-arg value="G89QGA76EDVCLYIP7XJ0TFXEBEOUWALN" />
	</beans:bean>
	
	<context:component-scan base-package="edu.howf.controller" />
	<context:component-scan base-package="edu.howf.dao"/>
	<context:component-scan base-package="edu.howf.service"/>
	<context:component-scan base-package="edu.howf.vo"/>
	
	<!--  spring-upload -->
	<!-- 파일 업로드를 위한 multipartResolver를 쓰기 위한 코드 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver" />
	
	
</beans:beans>
