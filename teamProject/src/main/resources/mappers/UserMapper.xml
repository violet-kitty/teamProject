<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<!-- 유저, 마이페이지, 로그인, 회원가입 -->
<mapper namespace="edu.howf.mapper.userMapper">
	<!-- 카카오,구글 최초 로그인시 회원가입 -->
	<insert id="socialInsert" parameterType="userVO">
		<![CDATA[
		INSERT INTO usertable(
			  name
			, email
			, role
			, social
			, joinyn
			, joindate
			, delyn
		)
		VALUES(
			  #{name}
			, #{email}
			, 'normal'
			, #{social}
			, 'Y'
			, now()
			, 'N'
		)
		]]>
		<selectKey resultType="int" keyProperty="midx" order="AFTER">
			SELECT max(midx) FROM usertable
		</selectKey>
	</insert>
	
	<!-- 닉네임 등록 -->
	<update id="nicknameInsert" parameterType="userVO">
		UPDATE usertable
		   SET nickname = #{nickname}
		 WHERE email = #{email}
	</update>
	
	<!-- 닉네임 가져오기 -->
	<select id="nicknameSelect" parameterType="String" resultType="String">
		SELECT nickname
		  FROM usertable
		 WHERE email = #{email}
	</select>
	
	<!-- 프로필 이미지 가져오기 -->
	<select id="imgSelect" parameterType="int" resultType="String">
		SELECT img
		FROM usertable
		WHERE midx = #{midx}
	</select>
	
	<!-- 이메일 중복체크 -->
	<select id="emailDup" parameterType="String" resultType="int">
		SELECT COUNT(email)
		  FROM usertable
		 WHERE email = #{email}
	</select>
	
	<!-- 이메일 중복체크 비밀번호 null -->
	<select id="emailDupPwd" parameterType="String" resultType="String">
		SELECT password
		FROM usertable
		WHERE email = #{email}
	</select>
	
	<!-- 닉네임 중복체크 -->
	<select id="nicknameDup" parameterType="String" resultType="int">
		SELECT COUNT(nickname)
		  FROM usertable
		 WHERE nickname = #{nickname}
	</select>
	
	<!-- 일반회원, 사업자 회원가입 -->
	<insert id="userInsert" parameterType="userVO">
		INSERT INTO usertable(
			  name
			, email
			, password
			, nickname
			, phone
			, addr
			, detailaddr
			, jumin
			, delyn
			, joindate
			, role
			, joinyn
		<if test="document != null">
			, document
		</if>
		)
		VALUES(
			  #{name}
			, #{email}
			, #{password}
			, #{nickname}
			, #{phone}
			, #{addr}
			, #{detailaddr}
			, #{jumin}
			, 'N'
			, now()
		<if test="document == null">
			, 'normal'
			, 'Y'
		</if>
		<if test="document != null">
			, 'business'
			, 'N'
			, #{document}
		</if>
		)
	</insert>
	
	<!-- 일반 로그인 -->
	<select id="login" parameterType="userVO" resultType="userVO">
		SELECT midx
			, nickname
			, img
			, role
			, joinyn
			, delyn
			, password
		 FROM usertable
		WHERE email = #{email}
	</select>
	
	<!-- 소셜 로그인 -->
	<select id="socialLogin" parameterType="userVO" resultType="int">
		SELECT midx
		FROM usertable
		WHERE email = #{email}
	</select>
	
	<!-- 소셜 로그인 밴 여부 -->
	<select id="socialBan" parameterType="userVO" resultType="String">
		SELECT delyn
		FROM usertable
		WHERE email = #{email}
	</select>
	
	<!-- 밴 사유 -->
	<select id="banComment" parameterType="userVO" resultType="String">
		SELECT c.content
		FROM usertable u
		JOIN comment c
		ON u.midx = c.midx
		WHERE u.email = #{email}
		AND c.type = 'ban'
		AND c.delyn = 'N'
	</select>
	
	<!-- 소셜 로그인 소셜 종류 -->
	<select id="socialType" parameterType="userVO" resultType="String">
		SELECT social
		FROM usertable
		WHERE email = #{email}
	</select>
	
	<!-- 이름, 닉네임 받아 있으면 이메일 반환 -->
	<select id="nameToEmail" parameterType="userVO" resultType="String">
		SELECT email
		  FROM usertable
		 WHERE name = #{name}
		   AND nickname = #{nickname}
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="pwdModify" parameterType="userVO">
		UPDATE usertable
		   SET password = #{password}
		 WHERE email = #{email}
	</update>
	
	<!-- 자동로그인 정보 넣기 -->
	<insert id="autoLoginInsert" parameterType="autoVO">
		INSERT INTO autologin(
			  midx
			, token
		)
		VALUES(
			  #{midx}
			, #{token}
		)
	</insert>
	
	<!-- 자동 로그인 삭제 -->
	<delete id="autoLoginDelete" parameterType="int">
		DELETE FROM autologin
		WHERE midx = #{midx}
	</delete>
	
	<!-- 자동로그인 여부 -->
	<select id="autoLogin" parameterType="autoVO" resultType="int">
		SELECT COUNT(midx)
		  FROM autologin
		 WHERE midx = #{midx}
		   AND token = #{token}
	</select>
	
	<!-- midx로 회원정보 가져오기(자동 로그인) -->
	<select id="autoLoginSelectOne" parameterType="int" resultType="userVO">
		SELECT midx
			, nickname
			, img
			, role
			, joinyn
			, password
		 FROM usertable
		 WHERE midx = #{midx}
	</select>
	
	
	<!-- 마이 페이지 -->
	
	
	<!-- 마이페이지 정보 가져오기 -->
	<select id="profileSelectOne" parameterType="int" resultType="userVO">
		SELECT name
			, email
			, password
			, nickname
			, phone
			, addr
			, detailaddr
			, jumin
			, img
			, document
			,social
		FROM usertable
		WHERE midx = #{midx}
	</select>
	
	<!-- 마이페이지 프로필 이미지 수정 -->
	<update id="profileImgModify" parameterType="userVO">
		UPDATE usertable
		SET img = #{img}
		WHERE midx = #{midx}
	</update>
	
	<!-- 내 정보 수정 -->
	<update id="profileModify" parameterType="userVO">
		UPDATE usertable
		SET   name = #{name}
			, nickname = #{nickname}
			, jumin = #{jumin}
			, email = #{email}
			, phone = #{phone}
			, password = #{password}
			, addr = #{addr}
			, detailaddr = #{detailaddr}
		WHERE midx = #{midx}
	</update>
	
	<!-- 회원 탈퇴 -->
	<update id="userDel" parameterType="int">
		UPDATE usertable
		SET delyn = 'Y'
		WHERE midx = #{midx}
	</update>
	
	<!-- 찜목록 가져오기(HOWF 추천) -->
	<select id="heartSelectHOWF" parameterType="searchVO" resultType="heartVO">
		SELECT a.*
			, b.title
			, b.filename
			, b.nickname
		FROM
		(SELECT hidx
			, type
			, bidx
		FROM heart
		WHERE type = 'howf'
		AND midx = #{midx}) a
		JOIN 
		(SELECT h.hbidx
			, h.title
			, h.filename
			, u.nickname
		FROM howf h
		JOIN usertable u
		ON h.midx = u.midx
		WHERE h.delyn = 'N') b
		ON a.bidx = b.hbidx
		LIMIT #{page}, #{perPageNum}
	</select>
	
	<!-- 찜 개수(HOWF 추천) -->
	<select id="heartCountHOWF" parameterType="searchVO" resultType="int">
		SELECT COUNT(a.hidx)
		FROM
		(SELECT hidx
			, type
			, bidx
		FROM heart
		WHERE type = 'howf'
		AND midx = #{midx}) a
		JOIN 
		(SELECT h.hbidx
			, h.title
			, h.filename
			, u.nickname
		FROM howf h
		JOIN usertable u
		ON h.midx = u.midx
		WHERE h.delyn = 'N') b
		ON a.bidx = b.hbidx
	</select>
	
	<!-- 찜목록 가져오기(지역 이벤트) -->
	<select id="heartSelectEvent" parameterType="searchVO" resultType="heartVO">
		SELECT a.*
			, b.title
			, b.filename
			, b.nickname
		FROM
		(SELECT hidx
			, type
			, bidx
		FROM heart
		WHERE type = 'event'
		AND midx = #{midx}) a
		JOIN 
		(SELECT e.ebidx
			, e.title
			, e.filename
			, u.nickname
		FROM event e
		JOIN usertable u
		ON e.midx = u.midx
		WHERE e.delyn = 'N') b
		ON a.bidx = b.ebidx
		LIMIT #{page}, #{perPageNum}
	</select>
	
	<!-- 찜 개수(지역 이벤트) -->
	<select id="heartCountEvent" parameterType="searchVO" resultType="int">
		SELECT COUNT(a.hidx)
		FROM
		(SELECT hidx
			, type
			, bidx
		FROM heart
		WHERE type = 'event'
		AND midx = #{midx}) a
		JOIN 
		(SELECT e.ebidx
			, e.title
			, e.filename
			, u.nickname
		FROM event e
		JOIN usertable u
		ON e.midx = u.midx
		WHERE e.delyn = 'N') b
		ON a.bidx = b.ebidx
	</select>
	
	<!-- 찜목록 가져오기(여행이야기) -->
	<select id="heartSelectStory" parameterType="searchVO" resultType="heartVO">
		SELECT a.*
			, b.title
			, b.filename
			, b.nickname
		FROM
		(SELECT hidx
			, type
			, bidx
		FROM heart
		WHERE type = 'story'
		AND midx = #{midx}) a
		JOIN 
		(SELECT e.sbidx
			, e.title
			, e.filename
			, u.nickname
		FROM story e
		JOIN usertable u
		ON e.midx = u.midx
		WHERE e.delyn = 'N') b
		ON a.bidx = b.sbidx
		LIMIT #{page}, #{perPageNum}
	</select>
	
	<!-- 찜 개수 가져오기(여행이야기) -->
	<select id="heartCountStory" parameterType="searchVO" resultType="int">
		SELECT COUNT(a.hidx)
		FROM
		(SELECT hidx
			, type
			, bidx
		FROM heart
		WHERE type = 'story'
		AND midx = #{midx}) a
		JOIN 
		(SELECT e.sbidx
			, e.title
			, e.filename
			, u.nickname
		FROM story e
		JOIN usertable u
		ON e.midx = u.midx
		WHERE e.delyn = 'N') b
		ON a.bidx = b.sbidx
	</select>
	
	<!-- 찜목록 가져오기(숙박 정보) -->
	<select id="heartSelectStay" parameterType="searchVO" resultType="heartVO">
		SELECT a.*
			, b.name
			, b.min
			, b.max
			, b.addr
			, b.photo as filename
		FROM
		(SELECT hidx
			, type
			, bidx
		FROM heart
		WHERE type = 'stay'
		AND midx = #{midx}) a
		JOIN 
		(SELECT s.sidx
			, s.name
			, s.addr
			, s.photo
			, min(r.price) as min
			, max(r.price) as max
		FROM stay s
		JOIN room r
		ON s.sidx = r.sidx
		WHERE s.delyn = 'N'
		GROUP BY s.sidx, s.name, s.addr) b
		ON a.bidx = b.sidx
		LIMIT #{page}, #{perPageNum}
	</select>
	
	<!-- 찜 개수(숙박 정보) -->
	<select id="heartCountStay" parameterType="searchVO" resultType="int">
		SELECT COUNT(a.hidx)
		FROM
		(SELECT hidx
			, type
			, bidx
		FROM heart
		WHERE type = 'stay'
		AND midx = #{midx}) a
		JOIN 
		(SELECT s.sidx
			, s.name
			, s.addr
			, s.photo
			, min(r.price) as min
			, max(r.price) as max
		FROM stay s
		JOIN room r
		ON s.sidx = r.sidx
		WHERE s.delyn = 'N'
		GROUP BY s.sidx, s.name, s.addr) b
		ON a.bidx = b.sidx
	</select>
	
	<!-- 내 리뷰 가져오기 -->
	<select id="myReview" parameterType="searchVO" resultType="commentVO">
		SELECT c.cbidx
			, c.content
			, c.star
			, c.bidx
			, c.photo
			, DATE_FORMAT(C.wdate,'%Y-%m-%d') as wdate
			, s.name
		FROM comment c
		JOIN stay s
		ON c.bidx = s.sidx
		WHERE c.midx = #{midx}
		AND c.delyn = 'N'
		AND s.delyn = 'N'
		AND c.type = 'stay'
		LIMIT #{page}, #{perPageNum}
	</select>
	
	<!-- 내 리뷰 개수 -->
	<select id="myReviewCount" parameterType="searchVO" resultType="int">
		SELECT COUNT(cbidx)
		FROM comment
		WHERE midx = #{midx}
		AND delyn = 'N'
		AND type = 'stay'
	</select>
	
	<!-- 내 댓글 가져오기 -->
	<select id="myComment" parameterType="searchVO" resultType="commentVO">
		SELECT c.cbidx
			, c.content
			, c.star
			, c.bidx
			, c.photo
			, DATE_FORMAT(C.wdate,'%Y-%m-%d') as wdate
			, s.name
		FROM comment c
		JOIN stay s
		ON c.bidx = s.sidx
		WHERE c.midx = #{midx}
		AND c.delyn = 'N'
		AND s.delyn = 'N'
		AND c.type = 'story'
		LIMIT #{page}, #{perPageNum}
	</select>
	
	<!-- 내 댓글 개수 -->
	<select id="myCommentCount" parameterType="searchVO" resultType="int">
		SELECT COUNT(cbidx)
		FROM comment
		WHERE midx = #{midx}
		AND delyn = 'N'
		AND type = 'story'
	</select>
	
	<!-- 내 여행이야기 -->
	<select id="myStory" parameterType="SearchVO" resultType="storyVO">
		SELECT * FROM
			(SELECT
				s.sbidx,
				s.midx,
				u.nickname,
				u.img,
				s.title,
				s.content,
				DATE_FORMAT(s.wdate,'%Y-%m-%d') as wdate,
				s.cnt,
				s.filename,
				s.tag,
				s.delyn
			 FROM story s, usertable u WHERE s.midx = u.midx) a
		LEFT OUTER JOIN
			(SELECT bidx, COUNT(hidx) as heart FROM heart WHERE type = 'story' GROUP BY bidx) b
		on a.sbidx = b.bidx
		WHERE a.delyn = 'N'
		AND a.midx = #{midx}
		<!-- 검색어 처리 -->
		<if test='searchType != null and searchType.equals("total")'>
			AND (a.title like CONCAT('%',#{searchValue},'%')
			OR a.tag like CONCAT('%',#{searchValue},'%')
			OR a.nickname like CONCAT('%',#{searchValue},'%'))
		</if>
		<if test='searchType != null and searchType.equals("title")'>
			AND a.title like CONCAT('%',#{searchValue},'%')
		</if>
		<if test='searchType != null and searchType.equals("tag")'>
			AND a.tag like CONCAT('%',#{searchValue},'%')
		</if>
		<if test='searchType != null and searchType.equals("nickname")'>
			AND a.nickname like CONCAT('%',#{searchValue},'%')
		</if>
		<!-- sort -->
		<if test='sortType == null or sortType == "" or sortType.equals("new")'>
			ORDER BY a.wdate desc, a.sbidx desc
		</if>
		<if test='sortType != null and sortType.equals("heart")'>
			ORDER BY b.heart desc, a.wdate desc
		</if>
		LIMIT #{page}, #{perPageNum}
	</select>
	
	<!-- 내 여행이야기 개수 -->
	<select id="myStoryCount" parameterType="SearchVO" resultType="int">
		SELECT COUNT(s.sbidx)
		FROM story s, usertable u
		WHERE s.midx = u.midx
		AND s.delyn = 'N'
		AND s.midx = #{midx}
		<!-- 검색어 처리 -->
		<if test='searchType != null and searchType.equals("total")'>
		AND (s.title like CONCAT('%',#{searchValue},'%')
		OR s.tag like CONCAT('%',#{searchValue},'%'))
		</if>
		<if test='searchType != null and searchType.equals("title")'>
		AND s.title like CONCAT('%',#{searchValue},'%')
		</if>
		<if test='searchType != null and searchType.equals("tag")'>
		AND s.tag like CONCAT('%',#{searchValue},'%')
		</if>
	</select>
	
	<!-- 내 너나들이 팀 목록 보기 -->
	<select id="myTeamList" parameterType="int" resultType="joinVO">
		SELECT a.jidx, a.joinyn, DATE_FORMAT(a.jdate,'%Y-%m-%d') as jdate, a.tidx, a.title, a.midx, u.nickname
		FROM
		(SELECT j.jidx, j.joinyn, j.jdate, t.tidx, t.title, t.midx
		FROM team t
		JOIN jointable j
		ON j.tidx = t.tidx
		WHERE j.midx = #{midx}
		AND t.delyn = 'N') a, usertable u
		WHERE a.midx = u.midx
		ORDER BY t.tidx DESC
	</select>
	
	<!-- 팀 가입신청 목록보기 & 승인 여부 -->
	<select id="myTeam_applyList" parameterType="int" resultType="joinVO">
		SELECT a.jidx, a.joinyn, DATE_FORMAT(a.jdate,'%Y-%m-%d') as jdate, a.tidx, a.title, a.midx, u.nickname
		FROM
		(SELECT j.jidx, j.joinyn, j.jdate, t.tidx, t.title, j.midx
		FROM team t
		JOIN jointable j
		ON j.tidx = t.tidx
		WHERE t.tidx = #{tidx}
		AND j.joinyn = 'N'
		AND t.delyn = 'N') a, usertable u
		WHERE a.midx = u.midx;
	</select>
	
	<!-- 가입신청 수락, 거절 -->
	<update id="apply_Y" parameterType="int">
		UPDATE	jointable
		SET		joinyn = 'Y'
		WHERE	jidx = #{jidx}
	</update>
	
	<delete id="apply_N" parameterType="int">
		DELETE FROM jointable
		WHERE		jidx = #{jidx}
	</delete>
	
	
	
	<!-- 회원 목록 -->
	<select id="userList" parameterType="searchVO" resultType="userVO">
		SELECT midx
			, name
			, email
			, nickname
			, phone
			, addr
			, detailaddr
			, jumin
			, role
			, img
			, document
			, social
			, joinyn
			, joindate
			, delyn
			, deldate
		FROM usertable
		WHERE role != 'admin'
		<!-- 검색 -->
		<if test='searchType != null and searchType.equals("total")'>
		AND (name like CONCAT('%',#{searchValue},'%')
		OR email like CONCAT('%',#{searchValue},'%')
		OR nickname like CONCAT('%',#{searchValue},'%')
		OR jumin like CONCAT('%',#{searchValue},'%')
		OR social like CONCAT('%',#{searchValue},'%'))
		</if>
		<!-- sort -->
		<if test='sortType != null and sortType.equals("dely")'>
		AND delyn = 'Y'
		</if>
		<if test='sortType != null and sortType.equals("deln")'>
		AND delyn = 'N'
		</if>
		<if test='sortType != null and sortType.equals("dela")'>
		AND delyn = 'A'
		</if>
		<if test='sortType != null and sortType.equals("normal")'>
		AND role = 'normal'
		</if>
		<if test='sortType != null and sortType.equals("business")'>
		AND role = 'business'
		</if>
		<if test='sortType != null and sortType.equals("official")'>
		AND role = 'official'
		</if>
		
		<if test='sortType != null and sortType.equals("midxA")'>
		ORDER BY midx asc
		</if>
		<if test='sortType != null and sortType.equals("midxD")'>
		ORDER BY midx desc
		</if>
		<if test='sortType != null and sortType.equals("nameA")'>
		ORDER BY name asc
		</if>
		<if test='sortType != null and sortType.equals("nameD")'>
		ORDER BY name desc
		</if>
		<if test='sortType != null and sortType.equals("emailA")'>
		ORDER BY email asc
		</if>
		<if test='sortType != null and sortType.equals("emailD")'>
		ORDER BY email desc
		</if>
		<if test='sortType != null and sortType.equals("nicknameA")'>
		ORDER BY nickname asc
		</if>
		<if test='sortType != null and sortType.equals("nicknameD")'>
		ORDER BY nickname desc
		</if>
		<if test='sortType != null and sortType.equals("juminA")'>
		ORDER BY jumin asc
		</if>
		<if test='sortType != null and sortType.equals("juminD")'>
		ORDER BY jumin desc
		</if>
		<if test='sortType != null and sortType.equals("roleA")'>
		ORDER BY role asc
		</if>
		<if test='sortType != null and sortType.equals("roleD")'>
		ORDER BY role desc
		</if>
		<if test='sortType != null and sortType.equals("socialA")'>
		ORDER BY social asc
		</if>
		<if test='sortType != null and sortType.equals("socialD")'>
		ORDER BY social desc
		</if>
		<if test='sortType != null and sortType.equals("joinA")'>
		ORDER BY joinyn asc
		</if>
		<if test='sortType != null and sortType.equals("joinD")'>
		ORDER BY joinyn desc
		</if>
		<if test='sortType != null and sortType.equals("jdateA")'>
		ORDER BY joindate asc
		</if>
		<if test='sortType != null and sortType.equals("jdateD")'>
		ORDER BY joindate desc
		</if>
		<if test='sortType != null and sortType.equals("delA")'>
		ORDER BY delyn asc, deldate asc
		</if>
		<if test='sortType != null and sortType.equals("delD")'>
		ORDER BY delyn desc, deldate desc
		</if>
		LIMIT #{page}, #{perPageNum}
	</select>
	
	<!-- 회원 목록 수 -->
	<select id="userListCount" parameterType="searchVO" resultType="int">
		SELECT COUNT(midx)
		FROM usertable
		WHERE role != 'admin'
		<!-- 검색 -->
		<if test='searchType != null and searchType.equals("total")'>
		AND (name like CONCAT('%',#{searchValue},'%')
		OR email like CONCAT('%',#{searchValue},'%')
		OR nickname like CONCAT('%',#{searchValue},'%')
		OR jumin like CONCAT('%',#{searchValue},'%')
		OR social like CONCAT('%',#{searchValue},'%'))
		</if>
		<!-- sort -->
		<if test='sortType != null and sortType.equals("dely")'>
		AND delyn = 'Y'
		</if>
		<if test='sortType != null and sortType.equals("deln")'>
		AND delyn = 'N'
		</if>
		<if test='sortType != null and sortType.equals("dela")'>
		AND delyn = 'A'
		</if>
		<if test='sortType != null and sortType.equals("normal")'>
		AND role = 'normal'
		</if>
		<if test='sortType != null and sortType.equals("business")'>
		AND role = 'business'
		</if>
		<if test='sortType != null and sortType.equals("official")'>
		AND role = 'official'
		</if>
		<if test='sortType != null and sortType.equals("name")'>
		ORDER BY name asc
		</if>
	</select>
	
	<!-- 회원 밴 -->
	<update id="userBan" parameterType="int">
		UPDATE usertable
		SET delyn = 'A'
		WHERE midx = #{midx}
	</update>
	
	<!-- 회원 밴 사유 -->
	<insert id="userBanComment" parameterType="commentVO">
		INSERT INTO comment(
			content
			, type
			, midx
			, wdate
			, delyn
		)
		VALUES(
			#{content}
			, 'ban'
			, #{midx}
			, now()
			, 'N'
		)
	</insert>
	
	<!-- 주소 차트용 데이터 -->
	<select id="addrData" resultType="UserVO">
		SELECT SUBSTRING_INDEX(addr, ' ', 1) as addr
			, COUNT(midx) as midx
		FROM usertable
		WHERE SUBSTRING_INDEX(addr, ' ', 1) != ''
		GROUP BY SUBSTRING_INDEX(addr, ' ', 1)
	</select>
	
	<!-- 나이 차트용 데이터 -->
	<select id="ageData" resultType="UserVO">
		SELECT CASE
		WHEN age <![CDATA[<]]> 20 THEN '10대'
		WHEN age <![CDATA[<]]> 30 THEN '20대'
		WHEN age <![CDATA[<]]> 40 THEN '30대'
		WHEN age <![CDATA[<]]> 50 THEN '40대'
		WHEN age <![CDATA[<]]> 60 THEN '50대'
		WHEN age <![CDATA[>=]]> 60 THEN '60대 이상'
		END as jumin,
		COUNT(*) as midx
		FROM
		(SELECT FLOOR(DATE_FORMAT(NOW(), '%Y')-SUBSTRING(jumin,1,4)) as age 
		FROM usertable) a
		WHERE age IS NOT NULL
		GROUP BY jumin
		ORDER BY jumin asc
	</select>
	
	<!-- 사업자 등록 목록 -->
	<select id="joinBSelect" parameterType="searchVO" resultType="userVO">
		SELECT midx
			, name
			, nickname
			, document
		FROM usertable
		WHERE delyn = 'N'
		AND role = 'business'
		AND joinyn = 'N'
		ORDER BY joindate asc
		LIMIT #{page}, #{perPageNum}
	</select>
	
	<!-- 사업자 등록 목록 개수 -->
	<select id="joinBCount" parameterType="searchVO" resultType="int">
		SELECT COUNT(midx)
		FROM usertable
		WHERE delyn = 'N'
		AND role = 'business'
		AND joinyn = 'N'
	</select>
	
	<!-- 사업자 가입 승인 -->
	<update id="joinBY" parameterType="int">
		UPDATE usertable
		SET joinyn = 'Y'
		WHERE midx = #{midx}
	</update>
	
	
	<!-- 사업자 가입 거절 -->
	<update id="joinBN" parameterType="int">
		UPDATE usertable
		SET delyn = 'Y'
		WHERE midx = #{midx}
	</update>
	
</mapper>